com/algorithmia/algo/AlgoFailure = Com.Algorithmia.Algo.AlgoFailure
  <init>(Lcom/algorithmia/AlgorithmException;)V = .ctor(Com.Algorithmia.AlgorithmException)
  error = Error
  isFailure()Z = IsFailure
  isSuccess()Z = IsSuccess
  getMetadata()Lcom/algorithmia/algo/Metadata; = Metadata
  getRawOutput()Ljava/lang/String; = RawOutput
  as(Ljava/lang/Class;)Ljava/lang/Object; = As(Java.Lang.Class)
  as(Ljava/lang/reflect/Type;)Ljava/lang/Object; = As(Java.Lang.Reflect.IType)
  asJsonString()Ljava/lang/String; = AsJsonString()
  asString()Ljava/lang/String; = AsString()
com/algorithmia/algo/AlgoResponse = Com.Algorithmia.Algo.AlgoResponse
  <init>()V = .ctor()
  isFailure()Z = IsFailure
  isSuccess()Z = IsSuccess
  getMetadata()Lcom/algorithmia/algo/Metadata; = Metadata
  getRawOutput()Ljava/lang/String; = RawOutput
  as(Lcom/algorithmia/TypeToken;)Ljava/lang/Object; = As(Com.Algorithmia.TypeToken)
  as(Ljava/lang/Class;)Ljava/lang/Object; = As(Java.Lang.Class)
  as(Ljava/lang/reflect/Type;)Ljava/lang/Object; = As(Java.Lang.Reflect.IType)
  asJsonString()Ljava/lang/String; = AsJsonString()
  asString()Ljava/lang/String; = AsString()
com/algorithmia/algo/Algorithm = Com.Algorithmia.Algo.Algorithm
  <init>(Lcom/algorithmia/client/HttpClient;Lcom/algorithmia/algo/AlgorithmRef;)V = .ctor(Com.Algorithmia.Client.HttpClient, Com.Algorithmia.Algo.AlgorithmRef)
  <init>(Lcom/algorithmia/client/HttpClient;Lcom/algorithmia/algo/AlgorithmRef;Ljava/util/Map;)V = .ctor(Com.Algorithmia.Client.HttpClient, Com.Algorithmia.Algo.AlgorithmRef, System.Collections.Generic.IDictionary<string, string>)
  pipe(Ljava/lang/Object;)Lcom/algorithmia/algo/AlgoResponse; = Pipe(Java.Lang.Object)
  pipeJson(Ljava/lang/String;)Lcom/algorithmia/algo/AlgoResponse; = PipeJson(string)
  setOption(Ljava/lang/String;Ljava/lang/String;)Lcom/algorithmia/algo/Algorithm; = SetOption(string, string)
  setOptions(Ljava/util/Map;)Lcom/algorithmia/algo/Algorithm; = SetOptions(System.Collections.Generic.IDictionary<string, string>)
  setOutputType(Lcom/algorithmia/algo/Algorithm$AlgorithmOutputType;)Lcom/algorithmia/algo/Algorithm; = SetOutputType(Com.Algorithmia.Algo.Algorithm.AlgorithmOutputType)
  setStdout(Z)Lcom/algorithmia/algo/Algorithm; = SetStdout(bool)
  setTimeout(Ljava/lang/Long;Ljava/util/concurrent/TimeUnit;)Lcom/algorithmia/algo/Algorithm; = SetTimeout(Java.Lang.Long, Java.Util.Concurrent.TimeUnit)
com/algorithmia/algo/AlgorithmRef = Com.Algorithmia.Algo.AlgorithmRef
  <init>(Ljava/lang/String;)V = .ctor(string)
  algoUri = AlgoUri
  getUrl()Ljava/lang/String; = Url
com/algorithmia/algo/AlgoSuccess = Com.Algorithmia.Algo.AlgoSuccess
  <init>(Lcom/google/gson/JsonElement;Lcom/algorithmia/algo/Metadata;Ljava/lang/String;)V = .ctor(GoogleGson.JsonElement, Com.Algorithmia.Algo.Metadata, string)
  isFailure()Z = IsFailure
  isSuccess()Z = IsSuccess
  getMetadata()Lcom/algorithmia/algo/Metadata; = Metadata
  getRawOutput()Ljava/lang/String; = RawOutput
  as(Ljava/lang/Class;)Ljava/lang/Object; = As(Java.Lang.Class)
  as(Ljava/lang/reflect/Type;)Ljava/lang/Object; = As(Java.Lang.Reflect.IType)
  asJsonString()Ljava/lang/String; = AsJsonString()
  asString()Ljava/lang/String; = AsString()
com/algorithmia/algo/ContentType = Com.Algorithmia.Algo.ContentType
  Binary = Binary
  Json = Json
  name = Name
  Text = Text
  Void = Void
  fromString(Ljava/lang/String;)Lcom/algorithmia/algo/ContentType; = FromString(string)
  valueOf(Ljava/lang/String;)Lcom/algorithmia/algo/ContentType; = ValueOf(string)
  values()[Lcom/algorithmia/algo/ContentType; = Values()
com/algorithmia/algo/Metadata = Com.Algorithmia.Algo.Metadata
  <init>(Lcom/algorithmia/algo/ContentType;Ljava/lang/Double;)V = .ctor(Com.Algorithmia.Algo.ContentType, Java.Lang.Double)
  <init>(Lcom/algorithmia/algo/ContentType;Ljava/lang/Double;Ljava/lang/String;)V = .ctor(Com.Algorithmia.Algo.ContentType, Java.Lang.Double, string)
  getContentType()Lcom/algorithmia/algo/ContentType; = ContentType
  getDuration()Ljava/lang/Double; = Duration
  getStdout()Ljava/lang/String; = Stdout
com/algorithmia/AlgorithmException = Com.Algorithmia.AlgorithmException
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Lcom/algorithmia/AlgorithmException;Ljava/lang/String;)V = .ctor(string, Com.Algorithmia.AlgorithmException, string)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
  stacktrace = Stacktrace
com/algorithmia/Algorithmia = Com.Algorithmia.Algorithmia
  algo(Ljava/lang/String;)Lcom/algorithmia/algo/Algorithm; = Algo(string)
  client()Lcom/algorithmia/AlgorithmiaClient; = Client()
  client(Ljava/lang/String;)Lcom/algorithmia/AlgorithmiaClient; = Client(string)
  dir(Ljava/lang/String;)Lcom/algorithmia/data/DataDirectory; = Dir(string)
  file(Ljava/lang/String;)Lcom/algorithmia/data/DataFile; = File(string)
com/algorithmia/AlgorithmiaClient = Com.Algorithmia.AlgorithmiaClient
  <init>()V = .ctor()
  <init>(Lcom/algorithmia/client/Auth;)V = .ctor(Com.Algorithmia.Client.Auth)
  algo(Ljava/lang/String;)Lcom/algorithmia/algo/Algorithm; = Algo(string)
  dir(Ljava/lang/String;)Lcom/algorithmia/data/DataDirectory; = Dir(string)
  file(Ljava/lang/String;)Lcom/algorithmia/data/DataFile; = File(string)
com/algorithmia/AlgorithmiaConf = Com.Algorithmia.AlgorithmiaConf
  apiAddress()Ljava/lang/String; = ApiAddress()
  apiKey()Ljava/lang/String; = ApiKey()
com/algorithmia/APIException = Com.Algorithmia.APIException
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
  fromHttpResponse(Lcom/algorithmia/client/HttpResponse;)Lcom/algorithmia/APIException; = FromHttpResponse(Com.Algorithmia.Client.HttpResponse)
com/algorithmia/client/Auth = Com.Algorithmia.Client.Auth
  <init>()V = .ctor()
  authenticateRequest(Lcom/algorithmia/client/HttpRequest;)V = AuthenticateRequest(Com.Algorithmia.Client.HttpRequest)
com/algorithmia/client/Base64 = Com.Algorithmia.Client.Base64
  <init>()V = .ctor()
  decodeBase64(Ljava/lang/String;)[B = DecodeBase64(string)
  encodeBase64String([B)Ljava/lang/String; = EncodeBase64String(byte[])
com/algorithmia/client/HttpClient = Com.Algorithmia.Client.HttpClient
  <init>(Lcom/algorithmia/client/Auth;)V = .ctor(Com.Algorithmia.Client.Auth)
  delete(Ljava/lang/String;)Lcom/algorithmia/client/HttpResponse; = Delete(string)
  get(Ljava/lang/String;)Lcom/algorithmia/client/HttpResponse; = Get(string)
  get(Ljava/lang/String;Lcom/algorithmia/TypeToken;Ljava/util/Map;)Ljava/lang/Object; = Get(string, Com.Algorithmia.TypeToken, System.Collections.Generic.IDictionary<string, string>)
  head(Ljava/lang/String;)Lcom/algorithmia/client/HttpResponse; = Head(string)
  patch(Ljava/lang/String;Lcom/algorithmia/client/HttpEntity;)Lcom/algorithmia/client/HttpResponse; = Patch(string, Com.Algorithmia.Client.HttpEntity)
  post(Ljava/lang/String;Lcom/algorithmia/client/HttpEntity;)Lcom/algorithmia/client/HttpResponse; = Post(string, Com.Algorithmia.Client.HttpEntity)
  post(Ljava/lang/String;Lcom/algorithmia/client/HttpEntity;Lcom/algorithmia/client/HttpResponseHandler;)Ljava/lang/Object; = Post(string, Com.Algorithmia.Client.HttpEntity, Com.Algorithmia.Client.HttpResponseHandler)
  post(Ljava/lang/String;Lcom/algorithmia/client/HttpEntity;Lcom/algorithmia/client/HttpResponseHandler;Ljava/util/Map;)Ljava/lang/Object; = Post(string, Com.Algorithmia.Client.HttpEntity, Com.Algorithmia.Client.HttpResponseHandler, System.Collections.Generic.IDictionary<string, string>)
  put(Ljava/lang/String;Lcom/algorithmia/client/HttpEntity;)Lcom/algorithmia/client/HttpResponse; = Put(string, Com.Algorithmia.Client.HttpEntity)
com/algorithmia/client/HttpClientHelpers = Com.Algorithmia.Client.HttpClientHelpers
  jsonToAlgoResponse(Lcom/google/gson/JsonElement;)Lcom/algorithmia/algo/AlgoResponse; = JsonToAlgoResponse(GoogleGson.JsonElement)
  parseRawOutput(Lcom/algorithmia/client/HttpResponse;)Lcom/algorithmia/algo/AlgoResponse; = ParseRawOutput(Com.Algorithmia.Client.HttpResponse)
  parseResponseJson(Lcom/algorithmia/client/HttpResponse;)Lcom/google/gson/JsonElement; = ParseResponseJson(Com.Algorithmia.Client.HttpResponse)
  throwIfNotOk(Lcom/algorithmia/client/HttpResponse;)V = ThrowIfNotOk(Com.Algorithmia.Client.HttpResponse)
com/algorithmia/client/HttpContentType = Com.Algorithmia.Client.HttpContentType
  <init>(Ljava/lang/String;)V = .ctor(string)
  APPLICATION_JSON = ApplicationJson
  APPLICATION_OCTET_STREAM = ApplicationOctetStream
  TEXT_PLAIN = TextPlain
com/algorithmia/client/HttpEntity = Com.Algorithmia.Client.HttpEntity
  <init>()V = .ctor()
  contentType = ContentType
  getContentType()Lcom/algorithmia/client/HttpContentType; = ContentType
  writeTo(Ljava/io/OutputStream;)V = WriteTo(System.IO.Stream)
com/algorithmia/client/HttpRequest = Com.Algorithmia.Client.HttpRequest
  <init>(Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string)
  connection = Connection
  addHeader(Ljava/lang/String;Ljava/lang/String;)V = AddHeader(string, string)
  execute()Lcom/algorithmia/client/HttpResponse; = Execute()
  execute(Lcom/algorithmia/client/HttpResponseHandler;)Ljava/lang/Object; = Execute(Com.Algorithmia.Client.HttpResponseHandler)
  setEntity(Lcom/algorithmia/client/HttpEntity;)V = SetEntity(Com.Algorithmia.Client.HttpEntity)
com/algorithmia/client/HttpResponse = Com.Algorithmia.Client.HttpResponse
  <init>(Ljava/lang/String;ILjava/io/InputStream;Ljava/util/Map;)V = .ctor(string, int, System.IO.Stream, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IList<string>>)
  body = Body
  headers = Headers
  status = Status
  url = Url
  getContent()Ljava/io/InputStream; = Content
  getStatusCode()I = StatusCode
  getFirstHeader(Ljava/lang/String;)Ljava/lang/String; = GetFirstHeader(string)
com/algorithmia/client/HttpResponseHandler = Com.Algorithmia.Client.HttpResponseHandler
  <init>()V = .ctor()
  handleResponse(Lcom/algorithmia/client/HttpResponse;)Ljava/lang/Object; = HandleResponse(Com.Algorithmia.Client.HttpResponse)
com/algorithmia/client/methods/HttpDelete = Com.Algorithmia.Client.Methods.HttpDelete
  <init>(Ljava/lang/String;)V = .ctor(string)
com/algorithmia/client/methods/HttpGet = Com.Algorithmia.Client.Methods.HttpGet
  <init>(Ljava/lang/String;)V = .ctor(string)
com/algorithmia/client/methods/HttpHead = Com.Algorithmia.Client.Methods.HttpHead
  <init>(Ljava/lang/String;)V = .ctor(string)
com/algorithmia/client/methods/HttpPatch = Com.Algorithmia.Client.Methods.HttpPatch
  <init>(Ljava/lang/String;)V = .ctor(string)
  setEntity(Lcom/algorithmia/client/HttpEntity;)V = SetEntity(Com.Algorithmia.Client.HttpEntity)
com/algorithmia/client/methods/HttpPost = Com.Algorithmia.Client.Methods.HttpPost
  <init>(Ljava/lang/String;)V = .ctor(string)
  setEntity(Lcom/algorithmia/client/HttpEntity;)V = SetEntity(Com.Algorithmia.Client.HttpEntity)
com/algorithmia/client/methods/HttpPut = Com.Algorithmia.Client.Methods.HttpPut
  <init>(Ljava/lang/String;)V = .ctor(string)
  setEntity(Lcom/algorithmia/client/HttpEntity;)V = SetEntity(Com.Algorithmia.Client.HttpEntity)
com/algorithmia/client/SimpleAuth = Com.Algorithmia.Client.SimpleAuth
  <init>(Ljava/lang/String;)V = .ctor(string)
  authenticateRequest(Lcom/algorithmia/client/HttpRequest;)V = AuthenticateRequest(Com.Algorithmia.Client.HttpRequest)
com/algorithmia/data/AbstractDataIterator = Com.Algorithmia.Data.AbstractDataIterator
  <init>(Lcom/algorithmia/data/DataDirectory;)V = .ctor(Com.Algorithmia.Data.DataDirectory)
  dir = Dir
  marker = Marker
  hasNext()Z = HasNext
  loadNextPage()V = LoadNextPage()
  newDataObjectInstance(Ljava/lang/String;)Ljava/lang/Object; = NewDataObjectInstance(string)
  next()Ljava/lang/Object; = Next()
  remove()V = Remove()
  setChildrenAndMarker(Ljava/util/List;Ljava/lang/String;)V = SetChildrenAndMarker(System.Collections.Generic.IList<string>, string)
com/algorithmia/data/DataAcl = Com.Algorithmia.Data.DataAcl
  <init>(Lcom/algorithmia/data/DataAclType;)V = .ctor(Com.Algorithmia.Data.DataAclType)
  MY_ALGOS = MyAlgos
  PRIVATE = Private
  PUBLIC = Public
  read = Read
  getReadPermissions()Lcom/algorithmia/data/DataAclType; = ReadPermissions
  fromAclResponse(Ljava/util/Map;)Lcom/algorithmia/data/DataAcl; = FromAclResponse(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IList<string>>)
com/algorithmia/data/DataAclType = Com.Algorithmia.Data.DataAclType
  <init>(Ljava/util/List;)V = .ctor(System.Collections.Generic.IList<string>)
  MY_ALGOS = MyAlgos
  MY_ALGOS_PERMISSIONS = MyAlgosPermissions
  PRIVATE = Private
  PUBLIC = Public
  PUBLIC_PERMISSIONS = PublicPermissions
  getAclStrings()Ljava/util/List; = AclStrings
  fromAclStrings(Ljava/util/List;)Lcom/algorithmia/data/DataAclType; = FromAclStrings(System.Collections.Generic.IList<string>)
com/algorithmia/data/DataDirectory = Com.Algorithmia.Data.DataDirectory
  <init>(Lcom/algorithmia/client/HttpClient;Ljava/lang/String;)V = .ctor(Com.Algorithmia.Client.HttpClient, string)
  getPermissions()Lcom/algorithmia/data/DataAcl; = Permissions
  create()V = Create()
  create(Lcom/algorithmia/data/DataAcl;)V = Create(Com.Algorithmia.Data.DataAcl)
  delete(Z)V = Delete(bool)
  dirs()Ljava/lang/Iterable; = Dirs()
  exists()Z = Exists()
  file(Ljava/lang/String;)Lcom/algorithmia/data/DataFile; = File(string)
  files()Ljava/lang/Iterable; = Files()
  getPage(Ljava/lang/String;Z)Lcom/algorithmia/data/DataDirectory$DirectoryListResponse; = GetPage(string, bool)
  putFile(Ljava/io/File;)Lcom/algorithmia/data/DataFile; = PutFile(Java.IO.File)
  updatePermissions(Lcom/algorithmia/data/DataAcl;)Z = UpdatePermissions(Com.Algorithmia.Data.DataAcl)
com/algorithmia/data/DataFile = Com.Algorithmia.Data.DataFile
  <init>(Lcom/algorithmia/client/HttpClient;Ljava/lang/String;)V = .ctor(Com.Algorithmia.Client.HttpClient, string)
  getFile()Ljava/io/File; = File
  getInputStream()Ljava/io/InputStream; = InputStream
  getString()Ljava/lang/String; = String
  delete()V = Delete()
  exists()Z = Exists()
  getBytes()[B = GetBytes()
  getString(Ljava/nio/charset/Charset;)Ljava/lang/String; = GetString(Java.Nio.Charset.Charset)
  put([B)V = Put(byte[])
  put(Ljava/io/File;)V = Put(Java.IO.File)
  put(Ljava/io/InputStream;)V = Put(System.IO.Stream)
  put(Ljava/lang/String;)V = Put(string)
  put(Ljava/lang/String;Lcom/algorithmia/client/HttpContentType;)V = Put(string, Com.Algorithmia.Client.HttpContentType)
com/algorithmia/data/DataObject = Com.Algorithmia.Data.DataObject
  <init>(Lcom/algorithmia/client/HttpClient;Ljava/lang/String;Lcom/algorithmia/data/DataObject$DataObjectType;)V = .ctor(Com.Algorithmia.Client.HttpClient, string, Com.Algorithmia.Data.DataObject.DataObjectType)
  client = Client
  dataType = DataType
  path = Path
  isDirectory()Z = IsDirectory
  isFile()Z = IsFile
  getName()Ljava/lang/String; = Name
  getParent()Lcom/algorithmia/data/DataDirectory; = Parent
  getType()Lcom/algorithmia/data/DataObject$DataObjectType; = Type
  getUrl()Ljava/lang/String; = Url
  exists()Z = Exists()
com/algorithmia/TypeToken = Com.Algorithmia.TypeToken
  <init>()V = .ctor()
